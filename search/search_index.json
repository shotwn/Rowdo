{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started \u2693\ufe0e How Rowdo Works \u2693\ufe0e Rowdo polls it's files table to track URLs and download them to file system. Results regarding the download operation are also depicted this table. In case of a download error, details are inserted in to the error logs table. Download Rowdo \u2693\ufe0e For windows operating systems a pre-packed single file executable is released in github. To run rowdo directly as a python script, clone the repository and simply call main.py after installing all the required dependencies in requirements.txt . It is highly recommended to use a venv environment. python -m venv env .\\ env \\ Scripts \\ activate Install all dependencies pip install -r requirements . txt Run rowdo python main . py Configuration \u2693\ufe0e Rowdo uses a global configuration file next to it's main script or executable called config.ini . Minimum required configuration to connect MySQL databases can be found here . In Windows environments, Rowdo executable can be installed as a service . Creating a Download Task \u2693\ufe0e To download a file basically INSERT a new row in files table . INSERT INTO ` rowdo_files ` ( ` url ` ) VALUES ( 'https://raw.githubusercontent.com/shotwn/Rowdo/main/assets/Logo.png' ) Info Operation result will get set to status field . You can set a file name or folder/name INSERT INTO ` rowdo_files ` ( ` url ` , ` filename ` ) VALUES ( 'https://raw.githubusercontent.com/shotwn/Rowdo/main/assets/Logo.png' , 'logos\\\\rowdo.png' ) It is also possible to run image resizing on file-by-file basis. INSERT INTO ` rowdo_files ` ( ` url ` , ` resize_mode ` , ` resize_ratio ` ) VALUES ( 'https://raw.githubusercontent.com/shotwn/Rowdo/main/assets/Logo.png' , '2' , '2.5' ) Using passthrough resize mode you can format images using PIL library without resizing them. INSERT INTO ` rowdo_files ` ( ` url ` , ` resize_mode ` ) VALUES ( 'https://raw.githubusercontent.com/shotwn/Rowdo/main/assets/Logo.png' , '0' ) Deleting a Downloaded File \u2693\ufe0e Rowdo can delete files using delete command. After setting a new command value it is important to reset status field . Unless status is reset to the initial state new command won't be processed. Deleting a downloaded file while keeping the row. Notice how status is reset to 0 . UPDATE ` rowdo_files ` SET ` command ` = '3' , ` status ` = '0' WHERE ` rowdo_files ` . ` id ` = 1","title":"Getting Started"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#how-rowdo-works","text":"Rowdo polls it's files table to track URLs and download them to file system. Results regarding the download operation are also depicted this table. In case of a download error, details are inserted in to the error logs table.","title":"How Rowdo Works"},{"location":"#download-rowdo","text":"For windows operating systems a pre-packed single file executable is released in github. To run rowdo directly as a python script, clone the repository and simply call main.py after installing all the required dependencies in requirements.txt . It is highly recommended to use a venv environment. python -m venv env .\\ env \\ Scripts \\ activate Install all dependencies pip install -r requirements . txt Run rowdo python main . py","title":"Download Rowdo"},{"location":"#configuration","text":"Rowdo uses a global configuration file next to it's main script or executable called config.ini . Minimum required configuration to connect MySQL databases can be found here . In Windows environments, Rowdo executable can be installed as a service .","title":"Configuration"},{"location":"#creating-a-download-task","text":"To download a file basically INSERT a new row in files table . INSERT INTO ` rowdo_files ` ( ` url ` ) VALUES ( 'https://raw.githubusercontent.com/shotwn/Rowdo/main/assets/Logo.png' ) Info Operation result will get set to status field . You can set a file name or folder/name INSERT INTO ` rowdo_files ` ( ` url ` , ` filename ` ) VALUES ( 'https://raw.githubusercontent.com/shotwn/Rowdo/main/assets/Logo.png' , 'logos\\\\rowdo.png' ) It is also possible to run image resizing on file-by-file basis. INSERT INTO ` rowdo_files ` ( ` url ` , ` resize_mode ` , ` resize_ratio ` ) VALUES ( 'https://raw.githubusercontent.com/shotwn/Rowdo/main/assets/Logo.png' , '2' , '2.5' ) Using passthrough resize mode you can format images using PIL library without resizing them. INSERT INTO ` rowdo_files ` ( ` url ` , ` resize_mode ` ) VALUES ( 'https://raw.githubusercontent.com/shotwn/Rowdo/main/assets/Logo.png' , '0' )","title":"Creating a Download Task"},{"location":"#deleting-a-downloaded-file","text":"Rowdo can delete files using delete command. After setting a new command value it is important to reset status field . Unless status is reset to the initial state new command won't be processed. Deleting a downloaded file while keeping the row. Notice how status is reset to 0 . UPDATE ` rowdo_files ` SET ` command ` = '3' , ` status ` = '0' WHERE ` rowdo_files ` . ` id ` = 1","title":"Deleting a Downloaded File"},{"location":"Reference/Config/","text":"Configuration \u2693\ufe0e Config.ini \u2693\ufe0e Rowdo uses the config.ini file on it's script or executable directory for global configuration parameters. Fields \u2693\ufe0e Database \u2693\ufe0e [database] user = my_username password = my_very_complex_password database = database host = hostname ; or ; url = mysql://my_username:my_very_complex_password@hostname/dbname ; optionally table_prefix = rowdo User \u2693\ufe0e user required if not database.url string Username for the mysql engine. user = my_username Password \u2693\ufe0e password required if not database.url string Password for the mysql engine. password = my_very_complex_password Database \u2693\ufe0e database required if not database.url string Database for the mysql engine. database = database Host \u2693\ufe0e host required if not database.url string Host address for the mysql engine. host = hostname URL \u2693\ufe0e url required if not user: password @database .host string SQLAlchemy Engine connection string, replaces mysql engine parameters if set. url = mysql://my_username:my_very_complex_password@hostname/dbname Table Prefix \u2693\ufe0e table_prefix optional string default: rowdo Prefix used front of tables in database. Such as rowdo_files . table_prefix = rowdo Download \u2693\ufe0e ; all optional [download] disallow_from = example.com allow_from = * allow_formats_url = * path = files keep_relative_path = 1 allow_mime_types = * max_attempts = 3 Disallow From \u2693\ufe0e disallow_from optional string default: (empty string) Comma separated list of disallowed websites. Can include protocol such as http://example.com . Info Disallowed patterns checked before allowed ones in allow from hence overriding it. ; ban all non secure downloads disallow_from = http:// Allow From \u2693\ufe0e disallow_from optional string default: * Comma separated list of allowed websites. Info Default * wildcard allows every url which are not in disallow from list. allow_from = * Allowed Formats URL \u2693\ufe0e allow_formats_url optional string default: * Comma separated list of URL ends. Default * wildcard disables this check. When enabled it allows only URLs which end with .format are allowed. allow_formats_url = * Path \u2693\ufe0e path optional string default: files Path relative to current working directory (where .exe is) to save files. At the moment upper directories such as ..\\. are not allowed. Path value is included in files table's downloaded_path field. Example If row.file_name is set example.png and config.path is set files then; row.downloaded_path in relative mode will be files\\example.png path = files Keep Relative Path \u2693\ufe0e keep_relative_path optional boolean default: 1 Determines the record type of downloaded_path field. When this settings is set to 0 , downloaded_path will be a full path such as C:\\current working directory\\files\\example.png . Danger This setting shouldn't change after first file is downloaded. Warning Using this option might be dangerous, allowing internal filesystem information in database. keep_relative_path = 1 Allow MIME Types \u2693\ufe0e allow_mime_types optional string default: * Comma separated list of allowed MIME types . Default * wildcard disables this check. allow_mime_types = * ; example allow_mime_types = image/jpeg, image/png Maximum Attempts \u2693\ufe0e max_attempts optional integer default: 3 Maximum number of retries on connection errors. max_attempts = 3 Runtime \u2693\ufe0e [runtime] debug = 0 run_every_seconds = 10 Debug \u2693\ufe0e debug optional boolean default: 0 Enables debug mode. debug = 0 Run Every Seconds \u2693\ufe0e run_every_seconds optional integer default: 10 Period of the main loop checking the database. run_every_seconds = 10 Working Directory \u2693\ufe0e working_directory optional integer default: executable or script call location Main directory for program to work in. Download directory and logs are relative to this directory. Normally these are relative to Rowdo.exe or when run as script to cwd. working_directory = C:\\my other directory Examples \u2693\ufe0e Bare Minimums \u2693\ufe0e ; config.ini [database] user = my_username password = my_very_complex_password database = database host = hostname Only Images from Imageshack \u2693\ufe0e ; config.ini [database] user = my_username password = my_very_complex_password database = database host = hostname [download] path = files\\rowdo ; allow_from is not '*' anymore. only these will be allowed. allow_from = https://imagizer.imageshack.com ; allow_formats_url is not '*' anymore. only these will be allowed. allow_formats_url = png, jpg allow_mime_types = image/jpeg, image/png","title":"Configuration"},{"location":"Reference/Config/#configuration","text":"","title":"Configuration"},{"location":"Reference/Config/#configini","text":"Rowdo uses the config.ini file on it's script or executable directory for global configuration parameters.","title":"Config.ini"},{"location":"Reference/Config/#fields","text":"","title":"Fields"},{"location":"Reference/Config/#database","text":"[database] user = my_username password = my_very_complex_password database = database host = hostname ; or ; url = mysql://my_username:my_very_complex_password@hostname/dbname ; optionally table_prefix = rowdo","title":"Database"},{"location":"Reference/Config/#user","text":"user required if not database.url string Username for the mysql engine. user = my_username","title":"User"},{"location":"Reference/Config/#password","text":"password required if not database.url string Password for the mysql engine. password = my_very_complex_password","title":"Password"},{"location":"Reference/Config/#database_1","text":"database required if not database.url string Database for the mysql engine. database = database","title":"Database"},{"location":"Reference/Config/#host","text":"host required if not database.url string Host address for the mysql engine. host = hostname","title":"Host"},{"location":"Reference/Config/#url","text":"url required if not user: password @database .host string SQLAlchemy Engine connection string, replaces mysql engine parameters if set. url = mysql://my_username:my_very_complex_password@hostname/dbname","title":"URL"},{"location":"Reference/Config/#table-prefix","text":"table_prefix optional string default: rowdo Prefix used front of tables in database. Such as rowdo_files . table_prefix = rowdo","title":"Table Prefix"},{"location":"Reference/Config/#download","text":"; all optional [download] disallow_from = example.com allow_from = * allow_formats_url = * path = files keep_relative_path = 1 allow_mime_types = * max_attempts = 3","title":"Download"},{"location":"Reference/Config/#disallow-from","text":"disallow_from optional string default: (empty string) Comma separated list of disallowed websites. Can include protocol such as http://example.com . Info Disallowed patterns checked before allowed ones in allow from hence overriding it. ; ban all non secure downloads disallow_from = http://","title":"Disallow From"},{"location":"Reference/Config/#allow-from","text":"disallow_from optional string default: * Comma separated list of allowed websites. Info Default * wildcard allows every url which are not in disallow from list. allow_from = *","title":"Allow From"},{"location":"Reference/Config/#allowed-formats-url","text":"allow_formats_url optional string default: * Comma separated list of URL ends. Default * wildcard disables this check. When enabled it allows only URLs which end with .format are allowed. allow_formats_url = *","title":"Allowed Formats URL"},{"location":"Reference/Config/#path","text":"path optional string default: files Path relative to current working directory (where .exe is) to save files. At the moment upper directories such as ..\\. are not allowed. Path value is included in files table's downloaded_path field. Example If row.file_name is set example.png and config.path is set files then; row.downloaded_path in relative mode will be files\\example.png path = files","title":"Path"},{"location":"Reference/Config/#keep-relative-path","text":"keep_relative_path optional boolean default: 1 Determines the record type of downloaded_path field. When this settings is set to 0 , downloaded_path will be a full path such as C:\\current working directory\\files\\example.png . Danger This setting shouldn't change after first file is downloaded. Warning Using this option might be dangerous, allowing internal filesystem information in database. keep_relative_path = 1","title":"Keep Relative Path"},{"location":"Reference/Config/#allow-mime-types","text":"allow_mime_types optional string default: * Comma separated list of allowed MIME types . Default * wildcard disables this check. allow_mime_types = * ; example allow_mime_types = image/jpeg, image/png","title":"Allow MIME Types"},{"location":"Reference/Config/#maximum-attempts","text":"max_attempts optional integer default: 3 Maximum number of retries on connection errors. max_attempts = 3","title":"Maximum Attempts"},{"location":"Reference/Config/#runtime","text":"[runtime] debug = 0 run_every_seconds = 10","title":"Runtime"},{"location":"Reference/Config/#debug","text":"debug optional boolean default: 0 Enables debug mode. debug = 0","title":"Debug"},{"location":"Reference/Config/#run-every-seconds","text":"run_every_seconds optional integer default: 10 Period of the main loop checking the database. run_every_seconds = 10","title":"Run Every Seconds"},{"location":"Reference/Config/#working-directory","text":"working_directory optional integer default: executable or script call location Main directory for program to work in. Download directory and logs are relative to this directory. Normally these are relative to Rowdo.exe or when run as script to cwd. working_directory = C:\\my other directory","title":"Working Directory"},{"location":"Reference/Config/#examples","text":"","title":"Examples"},{"location":"Reference/Config/#bare-minimums","text":"; config.ini [database] user = my_username password = my_very_complex_password database = database host = hostname","title":"Bare Minimums"},{"location":"Reference/Config/#only-images-from-imageshack","text":"; config.ini [database] user = my_username password = my_very_complex_password database = database host = hostname [download] path = files\\rowdo ; allow_from is not '*' anymore. only these will be allowed. allow_from = https://imagizer.imageshack.com ; allow_formats_url is not '*' anymore. only these will be allowed. allow_formats_url = png, jpg allow_mime_types = image/jpeg, image/png","title":"Only Images from Imageshack"},{"location":"Reference/Tables/","text":"Tables \u2693\ufe0e Files Table \u2693\ufe0e Field Type Default Insert / Update Nullable id Integer AUTO - PRIMARY KEY No url Text Yes No filename Text Yes resize_mode Integer -1 Yes No resize_width Integer Yes resize_height Integer Yes resize_ratio Numeric(10, 5) Yes command Integer 1 Yes No status Integer 0 Yes* No failed_attempts Integer 0 Yes* No preset_id Integer Yes downloaded_path Text No created_at DateTime CURRENT_TIMESTAMP No No updated_at DateTime CURRENT_TIMESTAMP No No *: Only for RESET Fields \u2693\ufe0e Url \u2693\ufe0e URL for the item to be downloaded. It cannot be blank. Filename \u2693\ufe0e File name for the downloaded file. If not set rowdo will generate the file name from URL and save the file directly on top level directory. File name field can contain directories such as \\events\\2002 or \\events\\2002.12.02.jpg . Directories will be automatically created inside the save directory. Warning Currently rowdo doesn't do any uniqueness checks on file names. So make sure to check database before entering a new file name. Using the same file name twice will override the already existing file. Extensions \u2693\ufe0e If not present, Rowdo will try to assign an extension to saved file automatically using the URL or MIME Type. For example \\events\\2002 will be saved as \\events\\2002.jpg . If filename is set and contains one or more dots, string after the last dot will be assumed as the save extension. For example with \\events\\2002.12.02 02 would be assumed as extension. If any of the resize modes is active, PIL library will try to re-format the downloaded contents as the set format. So even if downloaded picture is a JPG, it can be saved as a PNG by giving .png extension to filename as long as resize is active. If resize is not active, downloaded content will still have the .png extension but it will not be in PNG format. Warning It is highly recommended to provide a full filename with an extension. Resize Mode \u2693\ufe0e Sets the resize mode. Resize Modes Value Mode -1 None 0 Passthrough 1 Dimensions 2 Ratio Passthrough \u2693\ufe0e Saves the file using PIL library without any resize. Dimensions \u2693\ufe0e Resizes the file according to resize_width and resize_height. Ratio \u2693\ufe0e Resizes the file according to resize_ratio. Command \u2693\ufe0e Main commands available in rowdo for the row. Commands Value Command 0 Idle 1 Download 2 Delete 3 Delete File Only 4 Delete DB Entry Only Idle command gives done status but does not process the row any further. Download command downloads the file in the next run. Delete command deletes both the file and the row. Delete file only and Delete DB entry only commands do partial deletes. Status \u2693\ufe0e Status codes are the main tracking and triggering mechanism for rowdo. Rowdo processes rows only when their status codes are in Waiting to Process or Will Retry modes. Status Codes Value Status 0 Waiting to Process 1 Processing 2 Done 3 Error 4 Will Retry 5 Max Retries Reached Waiting to Process \u2693\ufe0e Default RESET state for the rowdo. For processing to start with any command status code should be Waiting to process or Will Retry . It is important to understand that changing the command will not trigger any processing as long as status is not RESET to this value. Processing \u2693\ufe0e Indicates the given command being processed. If rowdo will get terminated when a process is not complete, at next run all processing statuses will be reverted back to waiting to process . Done \u2693\ufe0e Set command is successfully completed. Error \u2693\ufe0e A critical error happened and processing of this row has been terminated. This will create an error entry in error logs table . Will Retry \u2693\ufe0e A warning level error happened and processing of this row has been terminated. This status is generally generated in non-configuration-related errors, such as a network error. An error can be found in error logs table . Rowdo will try the process this row again in next run until the maximum set number of retries in the config.ini has been reached. Max Retries Reached \u2693\ufe0e Indicates the error which created the will retry code was not resolved until maximum tries have been reached. Processing has been stopped. Failed Attempts \u2693\ufe0e Indicates the failed attempts in processing of this file. It shouldn't be rewritten unless problem was solved and a RESET with multiple tries allowed is being made. Preset ID \u2693\ufe0e Reserved field for possible future per-item configuration feature. Downloaded Path \u2693\ufe0e Where the file is located in the file system. It can be a relative path or an absolute path depending on corresponding configuration in config.ini . Created At \u2693\ufe0e Required field to keep track of the row. In mysql, rowdo enables CURRENT_TIMESTAMP default. So created date is automatically set during INSERT and user does not have to create this field manually. Updated At \u2693\ufe0e Required field to keep track of changes happening to row commands. Rowdo will remember the latest checked row and will not check rows which are updated before it. In mysql, rowdo enables CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP defaults, so user does not have to create/modify this field manually on every insert/update. Error Logs Table \u2693\ufe0e Read only table of errors occurred during processing of rows. Warning This table does not include system level errors, such as configuration or file permission errors. Check log files in .\\logs\\ for these. Fields \u2693\ufe0e Field Type Nullable id Integer No belongs_to Integer No type text Yes message text Yes level text Yes created_at DateTime No updated_at DateTime No Belongs To \u2693\ufe0e A foreign key representing a row in files table . Type \u2693\ufe0e Represents an exception type. Level \u2693\ufe0e Represents a severity level. severities = { 'CRITICAL' : 50 , 'ERROR' : 40 , 'WARNING' : 30 , 'INFO' : 20 , 'DEBUG' : 10 , 'TRACE' : 5 , 'NOTSET' : 0 } Runtime Table \u2693\ufe0e Runtime table is a 1 row table which keeps internal parameters for rowdo throughout sessions. Fields \u2693\ufe0e Field Type Description id Integer Always 1 last_checked_timestamp Integer Timestamp of the last processed row schema_version Text Active database schema version created_at DateTime updated_at DateTime","title":"Tables"},{"location":"Reference/Tables/#tables","text":"","title":"Tables"},{"location":"Reference/Tables/#files-table","text":"Field Type Default Insert / Update Nullable id Integer AUTO - PRIMARY KEY No url Text Yes No filename Text Yes resize_mode Integer -1 Yes No resize_width Integer Yes resize_height Integer Yes resize_ratio Numeric(10, 5) Yes command Integer 1 Yes No status Integer 0 Yes* No failed_attempts Integer 0 Yes* No preset_id Integer Yes downloaded_path Text No created_at DateTime CURRENT_TIMESTAMP No No updated_at DateTime CURRENT_TIMESTAMP No No *: Only for RESET","title":"Files Table"},{"location":"Reference/Tables/#fields","text":"","title":"Fields"},{"location":"Reference/Tables/#url","text":"URL for the item to be downloaded. It cannot be blank.","title":"Url"},{"location":"Reference/Tables/#filename","text":"File name for the downloaded file. If not set rowdo will generate the file name from URL and save the file directly on top level directory. File name field can contain directories such as \\events\\2002 or \\events\\2002.12.02.jpg . Directories will be automatically created inside the save directory. Warning Currently rowdo doesn't do any uniqueness checks on file names. So make sure to check database before entering a new file name. Using the same file name twice will override the already existing file.","title":"Filename"},{"location":"Reference/Tables/#extensions","text":"If not present, Rowdo will try to assign an extension to saved file automatically using the URL or MIME Type. For example \\events\\2002 will be saved as \\events\\2002.jpg . If filename is set and contains one or more dots, string after the last dot will be assumed as the save extension. For example with \\events\\2002.12.02 02 would be assumed as extension. If any of the resize modes is active, PIL library will try to re-format the downloaded contents as the set format. So even if downloaded picture is a JPG, it can be saved as a PNG by giving .png extension to filename as long as resize is active. If resize is not active, downloaded content will still have the .png extension but it will not be in PNG format. Warning It is highly recommended to provide a full filename with an extension.","title":"Extensions"},{"location":"Reference/Tables/#resize-mode","text":"Sets the resize mode. Resize Modes Value Mode -1 None 0 Passthrough 1 Dimensions 2 Ratio","title":"Resize Mode"},{"location":"Reference/Tables/#passthrough","text":"Saves the file using PIL library without any resize.","title":"Passthrough"},{"location":"Reference/Tables/#dimensions","text":"Resizes the file according to resize_width and resize_height.","title":"Dimensions"},{"location":"Reference/Tables/#ratio","text":"Resizes the file according to resize_ratio.","title":"Ratio"},{"location":"Reference/Tables/#command","text":"Main commands available in rowdo for the row. Commands Value Command 0 Idle 1 Download 2 Delete 3 Delete File Only 4 Delete DB Entry Only Idle command gives done status but does not process the row any further. Download command downloads the file in the next run. Delete command deletes both the file and the row. Delete file only and Delete DB entry only commands do partial deletes.","title":"Command"},{"location":"Reference/Tables/#status","text":"Status codes are the main tracking and triggering mechanism for rowdo. Rowdo processes rows only when their status codes are in Waiting to Process or Will Retry modes. Status Codes Value Status 0 Waiting to Process 1 Processing 2 Done 3 Error 4 Will Retry 5 Max Retries Reached","title":"Status"},{"location":"Reference/Tables/#waiting-to-process","text":"Default RESET state for the rowdo. For processing to start with any command status code should be Waiting to process or Will Retry . It is important to understand that changing the command will not trigger any processing as long as status is not RESET to this value.","title":"Waiting to Process"},{"location":"Reference/Tables/#processing","text":"Indicates the given command being processed. If rowdo will get terminated when a process is not complete, at next run all processing statuses will be reverted back to waiting to process .","title":"Processing"},{"location":"Reference/Tables/#done","text":"Set command is successfully completed.","title":"Done"},{"location":"Reference/Tables/#error","text":"A critical error happened and processing of this row has been terminated. This will create an error entry in error logs table .","title":"Error"},{"location":"Reference/Tables/#will-retry","text":"A warning level error happened and processing of this row has been terminated. This status is generally generated in non-configuration-related errors, such as a network error. An error can be found in error logs table . Rowdo will try the process this row again in next run until the maximum set number of retries in the config.ini has been reached.","title":"Will Retry"},{"location":"Reference/Tables/#max-retries-reached","text":"Indicates the error which created the will retry code was not resolved until maximum tries have been reached. Processing has been stopped.","title":"Max Retries Reached"},{"location":"Reference/Tables/#failed-attempts","text":"Indicates the failed attempts in processing of this file. It shouldn't be rewritten unless problem was solved and a RESET with multiple tries allowed is being made.","title":"Failed Attempts"},{"location":"Reference/Tables/#preset-id","text":"Reserved field for possible future per-item configuration feature.","title":"Preset ID"},{"location":"Reference/Tables/#downloaded-path","text":"Where the file is located in the file system. It can be a relative path or an absolute path depending on corresponding configuration in config.ini .","title":"Downloaded Path"},{"location":"Reference/Tables/#created-at","text":"Required field to keep track of the row. In mysql, rowdo enables CURRENT_TIMESTAMP default. So created date is automatically set during INSERT and user does not have to create this field manually.","title":"Created At"},{"location":"Reference/Tables/#updated-at","text":"Required field to keep track of changes happening to row commands. Rowdo will remember the latest checked row and will not check rows which are updated before it. In mysql, rowdo enables CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP defaults, so user does not have to create/modify this field manually on every insert/update.","title":"Updated At"},{"location":"Reference/Tables/#error-logs-table","text":"Read only table of errors occurred during processing of rows. Warning This table does not include system level errors, such as configuration or file permission errors. Check log files in .\\logs\\ for these.","title":"Error Logs Table"},{"location":"Reference/Tables/#fields_1","text":"Field Type Nullable id Integer No belongs_to Integer No type text Yes message text Yes level text Yes created_at DateTime No updated_at DateTime No","title":"Fields"},{"location":"Reference/Tables/#belongs-to","text":"A foreign key representing a row in files table .","title":"Belongs To"},{"location":"Reference/Tables/#type","text":"Represents an exception type.","title":"Type"},{"location":"Reference/Tables/#level","text":"Represents a severity level. severities = { 'CRITICAL' : 50 , 'ERROR' : 40 , 'WARNING' : 30 , 'INFO' : 20 , 'DEBUG' : 10 , 'TRACE' : 5 , 'NOTSET' : 0 }","title":"Level"},{"location":"Reference/Tables/#runtime-table","text":"Runtime table is a 1 row table which keeps internal parameters for rowdo throughout sessions.","title":"Runtime Table"},{"location":"Reference/Tables/#fields_2","text":"Field Type Description id Integer Always 1 last_checked_timestamp Integer Timestamp of the last processed row schema_version Text Active database schema version created_at DateTime updated_at DateTime","title":"Fields"},{"location":"Reference/Windows%20Specific/","text":"Windows Specific \u2693\ufe0e Executable \u2693\ufe0e Windows executable runs by simply: rowdo . exe Exe can also be installed as a service. Service API \u2693\ufe0e Install \u2693\ufe0e rowdo . exe - -service install Or for automatic service start on logon. (Default is manual) rowdo . exe - -startup auto - -service install Update \u2693\ufe0e rowdo . exe - -service update To change start up option rowdo . exe - -service - -startup delayed update rowdo . exe - -service - -startup disabled update rowdo . exe - -service - -startup manual update Start \u2693\ufe0e rowdo . exe - -service start Stop \u2693\ufe0e rowdo . exe - -service stop Remove \u2693\ufe0e rowdo . exe - -service remove","title":"Windows Specific"},{"location":"Reference/Windows%20Specific/#windows-specific","text":"","title":"Windows Specific"},{"location":"Reference/Windows%20Specific/#executable","text":"Windows executable runs by simply: rowdo . exe Exe can also be installed as a service.","title":"Executable"},{"location":"Reference/Windows%20Specific/#service-api","text":"","title":"Service API"},{"location":"Reference/Windows%20Specific/#install","text":"rowdo . exe - -service install Or for automatic service start on logon. (Default is manual) rowdo . exe - -startup auto - -service install","title":"Install"},{"location":"Reference/Windows%20Specific/#update","text":"rowdo . exe - -service update To change start up option rowdo . exe - -service - -startup delayed update rowdo . exe - -service - -startup disabled update rowdo . exe - -service - -startup manual update","title":"Update"},{"location":"Reference/Windows%20Specific/#start","text":"rowdo . exe - -service start","title":"Start"},{"location":"Reference/Windows%20Specific/#stop","text":"rowdo . exe - -service stop","title":"Stop"},{"location":"Reference/Windows%20Specific/#remove","text":"rowdo . exe - -service remove","title":"Remove"}]}